apply plugin: 'com.android.library'
apply from: rootDir.absolutePath + '/buildscript/module_extra_config.gradle'
apply from: rootDir.absolutePath + '/buildscript/module_upload_config.gradle'

def static getAllSource(Object set) {
    set.java.srcDirs += ['src/main/english/java-en_tcp']
    set.java.srcDirs += ['src/main/allsub/java-roll_call']
    set.res.srcDirs += ['src/main/allsub/res-roll_call']
    set.java.srcDirs += ['src/main/allsub/java-question']
    set.res.srcDirs += ['src/main/allsub/res-question']
    //弹幕
    set.java.srcDirs += ['src/main/allsub/java-danmaku']
    set.res.srcDirs += ['src/main/allsub/res-danmaku']
    //接麦
    set.res.srcDirs += ['src/main/allsub/res-video_chat']
    //排行榜
    set.java.srcDirs += ['src/main/allsub/java-rank']
}

//com.android.build.gradle.api.AndroidSourceSet set
def static getSecSource(Object set) {
    print("getSecSource:set=" + set.getClass() + "--");
    set.java.srcDirs += ['src/main/secience/java-teampk']
    //集体发言
    set.java.srcDirs += ['src/main/secience/java-collective_speech']
    // java.srcDirs += ['src/main/secience/java-collective_speech_old']
    set.res.srcDirs += ['src/main/secience/res-collective_speech']
    //老师点赞
    set.java.srcDirs += ['src/main/secience/java-teacher_praise']
//  set.java.srcDirs += ['src/main/secience/java-teacher_praise_old']
    set.res.srcDirs += ['src/main/secience/res-teacher_praise']
    //通过下载
//    set.assets.srcDirs += ['src/main/secience/assets']
    //小班体验
//    set.java.srcDirs += ['src/main/secience/java-primary_class_old']
    set.java.srcDirs += ['src/main/secience/java-primary_class']
    set.res.srcDirs += ['src/main/secience/res-primary_class']
    //小班体验
    set.java.srcDirs += ['src/main/chinese/java-primary_class']
    set.res.srcDirs += ['src/main/chinese/res-primary_class']
    //半身
    set.java.srcDirs += ['src/main/allsub/java-half_body']
    set.res.srcDirs += ['src/main/allsub/res-half_body']
}

def static getCnSource(Object set) {
    print("getCnSource:set=" + set.getClass() + "--");
    //小班体验
    set.java.srcDirs += ['src/main/secience/java-primary_class']
    set.res.srcDirs += ['src/main/secience/res-primary_class']
    set.java.srcDirs += ['src/main/chinese/java-primary_class']
    set.res.srcDirs += ['src/main/chinese/res-primary_class']
    //半身
    set.java.srcDirs += ['src/main/allsub/java-half_body']
    set.res.srcDirs += ['src/main/allsub/res-half_body']
}

def static getEngSource(Object set) {
//    java.srcDirs += ['src/main/english/java-en_teampk_old']
//    java.srcDirs += ['src/main/java-achievement_old']
    set.java.srcDirs += ['src/main/java-en_teampk']
    set.res.srcDirs += ['src/main/res-en_teampk']
    set.java.srcDirs += ['src/main/java-achievement']
    set.res.srcDirs += ['src/main/english/res-achievement']
//    set.assets.srcDirs += ['src/main/english/assets']
    set.assets.srcDirs += ['src/main/english/assetsv2']

    //全身
    set.java.srcDirs += ['src/main/english/java-stand']
    set.res.srcDirs += ['src/main/english/res-stand']
}

android {
    defaultConfig {
        ndk {
            abiFilters "armeabi-v7a"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java.srcDirs += ['src/main/java-core']
//            assets.srcDirs += ['src/main/live_assets']
            assets.srcDirs += ['src/main/live_assets_v2']
            getAllSource(this.android.sourceSets.main);
            getSecSource(this.android.sourceSets.main);
            getCnSource(this.android.sourceSets.main);
            getEngSource(this.android.sourceSets.main);
//            java.srcDirs += ['src/main/java-experience']
        }
    }
    compileSdkVersion rootProject.ext.configuration.compileSdkVersion
    buildToolsVersion rootProject.ext.configuration.buildToolsVersion
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
//    api 'org.java-websocket:Java-WebSocket:1.3.4'
    api rootProject.ext.thirdlibraries.JavaWebSocket
    //glide库
    implementation rootProject.ext.thirdlibraries.glide

    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.speechrecognizer)
//    implementation(rootProject.ext.xeslibraries.ldnetdiagnoservice) { changing = true }
    //uicomponent
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.uicomponent)
    //framework
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.framework)
    rootProject.xrsImplementation(this.getProject(),rootProject.ext.xeslibraries.xutils)
    rootProject.xrsImplementation(this.getProject(),rootProject.ext.xeslibraries.danmaku)
    //统计
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.analytics)
    //图片处理
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.imageloader)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.audio)
    //日志
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.logger)
    //    implementation project(':ijkplayer')
//    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.ijkplayer)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.player)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.cloud)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.share)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.browser)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.xeslottie)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.pschatsdk)
    implementation rootProject.ext.thirdlibraries.arouterapi
    implementation rootProject.ext.thirdlibraries.appcompat
    implementation rootProject.ext.thirdlibraries.recyclerview
    implementation rootProject.ext.thirdlibraries.okhttp
    implementation rootProject.ext.thirdlibraries.constraint
    implementation rootProject.ext.thirdlibraries.arouterapi
    implementation rootProject.ext.thirdlibraries.bugly
    annotationProcessor rootProject.ext.thirdlibraries.aroutercompiler
    implementation rootProject.ext.thirdlibraries.ticker
    implementation rootProject.ext.thirdlibraries.tray
    implementation rootProject.ext.thirdlibraries.design
    implementation rootProject.ext.thirdlibraries.letousdk
    implementation rootProject.ext.thirdlibraries.wx

    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.agora)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.thirdlibraries.rtcengine)
    //    implementation project(':library:agora')
    //implementation(rootProject.ext.xeslibraries.waveform) { changing = true }
    //implementation project(':library:waveform')
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.thirdlibraries.gifDrawable)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.thirdlibraries.transition)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.thirdlibraries.rxjava)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.thirdlibraries.rxandroid)
//    implementation 'com.github.adrielcafe:ffmpeg-android-java:2a627f6ecd@aar'
//    implementation "androidx.work:work-runtime:2.01"
    //    implementation project(':library:agora')
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.businessinterface)
    rootProject.xrsImplementation(this.getProject(),rootProject.ext.xeslibraries.xutils)
    rootProject.xrsImplementation(this.getProject(),rootProject.ext.xeslibraries.danmaku)
//    rootProject.xrsImplementation(this.getProject(),rootProject.ext.businesslibraries.aievaluation)
//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.6.3'
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'

    rootProject.xrsImplementation(this.getProject(), rootProject.ext.thirdlibraries.logan)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.xrsbury)

    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.monitor)

    implementation rootProject.ext.thirdlibraries.fastjson

    implementation(rootProject.ext.thirdlibraries.gson){
        changing = true
    }
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.talaccsdk)
}
apply from: rootDir.absolutePath + '/buildscript/module_secure_check.gradle'
apply from: rootDir.absolutePath + '/buildscript/module_replace_image.gradle'