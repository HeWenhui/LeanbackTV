apply plugin: 'com.android.library'
apply from: rootDir.absolutePath + '/buildscript/module_extra_config.gradle'
apply from: rootDir.absolutePath + '/buildscript/module_upload_config.gradle'

android {
    defaultConfig {
        ndk {
            abiFilters "armeabi-v7a"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java.srcDirs += ['src/main/java-en_teampk']
            res.srcDirs += ['src/main/res-en_teampk']
            java.srcDirs += ['src/main/java-achievement']
            res.srcDirs += ['src/main/res-achievement']
            java.srcDirs += ['src/main/english/java-en_tcp']
        }
    }
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'org.java-websocket:Java-WebSocket:1.3.4'
    //glide库
    implementation rootProject.ext.thirdlibraries.glide
    implementation(rootProject.ext.xeslibraries.speechrecognizer) { changing = true }
    implementation(rootProject.ext.xeslibraries.ldnetdiagnoservice) { changing = true }
    //uicomponent
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.uicomponent)
    //framework
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.framework)
    //统计
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.analytics)
    //图片处理
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.imageloader)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.audio)
    //日志
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.logger)
    //    implementation project(':ijkplayer')
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.ijkplayer)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.player)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.cloud)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.share)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.browser)
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.xeslottie)
    implementation rootProject.ext.thirdlibraries.arouterapi
    implementation rootProject.ext.thirdlibraries.appcompat
    implementation rootProject.ext.thirdlibraries.recyclerview
    implementation rootProject.ext.thirdlibraries.okhttp
    implementation rootProject.ext.thirdlibraries.constraint
    implementation rootProject.ext.thirdlibraries.arouterapi
    implementation rootProject.ext.thirdlibraries.bugly
    annotationProcessor rootProject.ext.thirdlibraries.aroutercompiler
    //    implementation project(':business:endictation')
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.businesslibraries.endictation)
    implementation rootProject.ext.thirdlibraries.ticker
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.xeslibraries.agora)
    //    implementation project(':library:agora')
    //implementation(rootProject.ext.xeslibraries.waveform) { changing = true }
    //implementation project(':library:waveform')
    rootProject.xrsImplementation(this.getProject(), rootProject.ext.thirdlibraries.gifDrawable)
    //    implementation project(':library:agora')
}
